version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: D:\og\backend\DockerFile # <<< Dockerfile yolunu açıkça belirtelim
    container_name: ogs_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - backend_node_modules:/app/node_modules
    networks:
      - ogs_network

  frontend:
    build:
      context: ./frontend
      dockerfile: D:\og\frontend\DockerFile # <<< Frontend için de açıkça belirtelim
    container_name: ogs_frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - ogs_network

  db:
    image: postgres:15-alpine
    container_name: ogs_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ogs_network

networks:
  ogs_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  backend_node_modules:
    driver: local
